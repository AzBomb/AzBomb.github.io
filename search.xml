<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Siemens 项目调试笔记 - PN 分布式 IO 掉线后的离奇经历</title>
      <link href="/2022/10/19/0003_Siemens%E9%A1%B9%E7%9B%AE%E8%B0%83%E8%AF%95%E7%AC%94%E8%AE%B0-PN%E5%88%86%E5%B8%83%E5%BC%8FIO%E6%8E%89%E7%BA%BF%E5%90%8E%E7%9A%84%E7%A6%BB%E5%A5%87%E7%BB%8F%E5%8E%86/"/>
      <url>/2022/10/19/0003_Siemens%E9%A1%B9%E7%9B%AE%E8%B0%83%E8%AF%95%E7%AC%94%E8%AE%B0-PN%E5%88%86%E5%B8%83%E5%BC%8FIO%E6%8E%89%E7%BA%BF%E5%90%8E%E7%9A%84%E7%A6%BB%E5%A5%87%E7%BB%8F%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://github.com/AzBomb/AzBomb.github.io">AzBomb</a> 的博客!</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>用过 Siemens 自动化系统的朋友都知道，由于它在国内强大的技术支持和市场占有率的，我们绝大部分项目所使用的自控品牌都是西家首选。近期由于种种原因，哪怕它的供货价格在不断上涨，供货周期也长得离谱，我们却任然绕不开它。这个有点扯远了，与本篇文章有点不搭边，下面谈谈近期遇到一个比较有意思的组态问题，很值得作为典型案例记录下来，问题现象呢很简单，问题最后的解决方法也很简单，但处理过程花了我们比较长时间，而且当时一度质疑到了整个系统的网络构架。</p><h2 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h2><p>这个项目比较大，用的是 CPU 1518 4PN&#x2F;DP 作为主站，分布式 IO 也很多，有 300 多个 PN 节点。按照项目的功能和区域规划了 3 个 PN 段，用了 20 几个交换机，具体细节就不讲了，整个网络组态已基本组好在线稳定运行过一段时间。后面的事就是项目的调试等等，组态这块不再去关注了。</p><p>突然有一天，同事找我，有个 IO 从站掉线了，一开始以为也没什么大事，这么多设备一两个掉线很正常，很容易就能解决。到现场先来个三板斧：换网线、ping IP、换网关，是不是熟悉的味道，但是失算了，依然与 CPU 通讯不上。这时我还抱有一丝希望，是不是哪个接口松了，或是哪根线没接好，又折腾了好久，依然不行。</p><h2 id="故障排查"><a href="#故障排查" class="headerlink" title="故障排查"></a>故障排查</h2><p>难道网络不稳定、CUP的通讯负载太高、交换机的线路规划有问题？这一长串的问题快让我懵了，故障怎么去排查呢？三板斧不行，那用排除法试试，将此 IO 从站交换机上的设备网线先全部断开，只保留此问题 IO 设备连接，是不是能组态在线（如果不行的话，还要将 CPU 到此交换机只能单独连这个设备，从而排除其他网络干扰）？这次比较幸运，此交换机其他设备断开后，IO 从站终于能在线了。下面的办法，再将其他设备一个个连上，看是哪个设备与它冲突。当交换机设备全都插上后，冲突没出现，居然全部正常，对，没错，所有设备又能与 CPU 正常通讯（包含那个 IO 从站）。</p><p>是不是故障解决了，不会再有问题了呢？秉着自控人一贯严谨作风，我们又将之前有问题的 IO 从站重启了一下，让人大跌眼镜的是 IO 从站没能与 CPU 通讯上，问题它又回来了。搞了半天似乎回到了原点，当时真的有点泄气了，现场调试也碰到过很多疑难杂症，从未遇到这种故障现象，当时感觉有点无从下手了。</p><p>怪哉，怪哉！</p><p>怎么办，这种故障往大了说可能是系统性的问题，如果是系统性问题那可是个大麻烦，就算不是大麻烦也要把当下的故障排除掉才能正常运行。</p><h2 id="寻找元凶"><a href="#寻找元凶" class="headerlink" title="寻找元凶"></a>寻找元凶</h2><p>虽然故障排查又回到了原点，但我们又将之前的方法重复了几遍，现象是一模一样。断开其他设备后先是正常，重启问题 IO 从站又失败。至少这交换机上设备就是问题的所在，又不知试了多少次，终于排查到是其中一个触摸屏与此 IO 从站不能同时在线。具体现象就是，如果同时在线，或者先连触摸屏，IO 从站必定掉线；如果 IO 从站先连接后再连触摸屏，所有设备又都是正常的，且触摸屏也能与 CPU 正常通讯。是不是交换机问题？又一系列漫长操作后，确定此触摸屏与 IO 从站不管与哪个交换机相连，就是不能友好相处，两个设备杠上了。</p><p>终于从一脸懵逼进入了一筹莫展，迎来了新的僵局。虽然能找出故障相关设备，但找不出问题具体原因所在，就不能彻底处理这个故障。到此为了排查这个故障，又去找了个新触摸屏，设置好参数，连上网线，故障消失了。难道是触摸屏问题？但是新触摸屏还没下载相应项目，下载好之前触摸屏项目后，问题它又重现了。与软件项目有关？这是我们所料未及的，一般此类故障都是与硬件或参数有关系，与软件项目从未遇到过。</p><p>离奇，真是太离奇了，我又一次不知所措了。经过一番思考和推断，出现这种故障，项目软件就算有问题，也应先从网络参数冲突开始排查，PN设备名称、IP地址、MAC地址这三个要一一核对排查。又开始了一系列的操作，功夫不负有心人，当我用博途软件从网卡扫描到设备网络参数时真相终于大白，请看两幅截图：</p><p><img src="/../img/0003/a11_hmi_.jpg"></p><blockquote><p>图片来自 博途项目 截图</p></blockquote><p><img src="/../img/0003/a11_im_.jpg"></p><blockquote><p>图片来自 博途项目 截图</p></blockquote><p>大家此时也判断出什么原因了，触摸屏的 PN 设备名称与 IO 从站的设备名称同名冲突，设备名称都是“a11”，到此故障结症终于找到，处理也很简单，将触摸屏项目的 PN 原设备名称：“a11” 改掉即可。如下图所示：</p><p><img src="/../img/0003/hmi_pn_.jpg"></p><blockquote><p>图片来自 博途项目 截图</p></blockquote><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>综前所述，其实这是个很简单的问题，处理起来也很简单。那为什么此次排查过程这么曲折而又反复呢？如果是个小项目是不会出现这个问题的，在同一个项目里，PN 设备名称系统是自动识别的，不可能出现这样的状况，就算小概率出现也能很快找到问题所在；原因就是这项目比较大，设备多，要额外考虑很多复杂因素，再加上之前稳定运行过一段时间，触摸屏项目是之后下载运行，且屏和 CPU 没在一个项目组态里，一开始根本不会往这方面去想，就给排查带来了很多困难。</p><p>Siemens 博途的网络组态从站通讯方式是 CPU 先用设备名称来查找设备从站，查找到设备后再将 IP 地址分配给从站，从站获取到 IP 地址后就可以与 CPU 正常通讯了；所以 Siemens 博途的设备从站每次重启后 IP 地址位为空，要等 CPU 给它重新分配后才有属于自己的 IP。触摸屏的手动设置 IP 地址不需要CPU分配，且重启后 IP 地址是永久保存再设备中不会消失（除非选用DHCP模式），有兴趣的朋友可以自己验证一下。如果同一个网段有重名的设备名称当然就会出现网络异常啦。其实如果先下载触摸屏项目后组态 IO 从站分配设备名称博途是会提示重名失败，但反过来，后下载触摸屏的话就不会提示重名，因为项目下载用的是IP地址，不去识别设备名称。严格一点话这也算是 Siemens 博途的一个小 bug。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这个看似简单问题的排查，其实过程中动用了很多资源，也少不了同事们的帮助和分析。正是有大家帮助和提点，才有了这次有趣且印象深刻的经历。</p><p>在此感谢大家的支持！</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> Siemens </category>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化,组态,调试,西门子,Siemens,博途,Tia,PN,PLC,网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎样用 Github 和 Hexo 搭建个人网站</title>
      <link href="/2022/10/07/0002_%E6%80%8E%E6%A0%B7%E7%94%A8github%E5%92%8Chexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
      <url>/2022/10/07/0002_%E6%80%8E%E6%A0%B7%E7%94%A8github%E5%92%8Chexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://github.com/AzBomb/AzBomb.github.io">AzBomb</a> 的博客!</p><h2 id="为什么是Github"><a href="#为什么是Github" class="headerlink" title="为什么是Github"></a>为什么是Github</h2><p>搞一个完全属于自己的网站，首先要有个服务器，一般要么自己搭，要么买云服务，这两者多少都要花些银子。<a href="https://github.com/">Github</a> 对于刚开始搞网站的伙伴们刚刚好，一个完全公开化的免费服务器，如果有更高的需求还可以付费私有化。网上教程挺多的，也不需要太复杂的知识储备，当然 <a href="https://github.com/">Github</a>暂时还没有官方中文支持，且有些配置要用到 shell 命令行操作，入坑的小伙伴要有些技能准备。</p><h2 id="怎么从Github开始"><a href="#怎么从Github开始" class="headerlink" title="怎么从Github开始"></a>怎么从Github开始</h2><p>网上教程有很多，可以找一篇适合自己的，在此借用知乎小伙伴 <a href="https://zhuanlan.zhihu.com/p/91652100">“霸都、傲天”的帖子</a>，按他的这个步骤，就能完成一个基本网站服务器的建设了。</p><h3 id="这里有个注意点要提醒大家："><a href="#这里有个注意点要提醒大家：" class="headerlink" title="这里有个注意点要提醒大家："></a>这里有个注意点要提醒大家：</h3><p> 注册好账户，登录成功之后，点击 <a href="https://github.com/">Github</a> 中的 New repository 创建新仓库，仓库名应该为：”username”.github.io 。这里”username”使用你的 <a href="https://github.com/">Github</a> 帐号名称代替，这是固定写法。</p><p><img src="/img/0002/github_rep_name.jpg"></p><blockquote><p>图片来自 github 截图</p></blockquote><h2 id="Hexo框架"><a href="#Hexo框架" class="headerlink" title="Hexo框架"></a>Hexo框架</h2><p><a href="https://github.com/">Github</a> 仓库建好后，再新建 index.html 文件，在文件内新增自己的内容，一个简单的个人网页就好了。但这需要专业的 html 网页编辑知识，且网站维护也比较麻烦。框架模板式网站建设优点很明显，虽然刚开始需要在客户端预装一些软件，后期维护客户端可以离线维护，等调试好后再更新到自己的 <a href="https://github.com/">Github</a> 上，操作也很便捷。常用框架大家比较推荐 Hexo，网上资料也比较多，我当然也是 Hexo，这里我推荐几篇文章，RD.Timon 大神的<a href="https://cloud.tencent.com/developer/article/1729537">《hexo搭建个人网站博客完全教程》</a>,知乎社区问答<a href="https://www.zhihu.com/question/22197688">《如何自己搭建一个个人网站？》</a> “程序员吴师兄” 的回答很棒，知乎社区 crystal <a href="https://zhuanlan.zhihu.com/p/60578464">《使用 Hexo+GitHub 搭建个人免费博客教程（小白向）》</a>，以及知乎社区 “吴润” 大神的<a href="https://zhuanlan.zhihu.com/p/26625249">《GitHub+Hexo 搭建个人网站详细教程》</a>，我建站过程基本都是参考了这几位大神文章而搭起来的。</p><h3 id="Hexo框架建站总结"><a href="#Hexo框架建站总结" class="headerlink" title="Hexo框架建站总结"></a>Hexo框架建站总结</h3><p>经过几天摸索后，过程中也遇到了一些问题，网站已基本能上线运行了。下面我就把这几天心得总结一下，先从 Git 和 Node.js 这两个软件开始。</p><h3 id="用git配置信息-amp-生成密钥"><a href="#用git配置信息-amp-生成密钥" class="headerlink" title="用git配置信息&amp;生成密钥"></a>用git配置信息&amp;生成密钥</h3><p>在终端进行操作，设置 user.name 和 user.email 配置信息，这里设置为全局。</p><pre><code>git config --global user.name &quot;username&quot;     # username 你的 GitHub 用户名git config --global user.email &quot;useremail&quot; # useremail 你的 GitHub 注册邮箱</code></pre><h4 id="通过注册的邮箱生成-ssh-密钥文件："><a href="#通过注册的邮箱生成-ssh-密钥文件：" class="headerlink" title="通过注册的邮箱生成 ssh 密钥文件："></a>通过注册的邮箱生成 ssh 密钥文件：</h4><pre><code>ssh-keygen -t rsa -C &quot;useremail&quot; # useremail 你的 GitHub 注册邮箱</code></pre><p>然后直接三个回车即可，默认不需要设置密码。得到了两个文件：id_rsa和id_rsa.pub。</p><p>打开 id_rsa.pub 文件，将里面的内容全部复制。粘贴到 GitHub 的”你的 GitHub 用户名”.github.io 仓库选项，选项路径是：”你的 GitHub 用户名”.github.io&#x2F;settings&#x2F;keys&#x2F;</p><p>按网页提示添加好 SSH Key 后，进行测试。</p><pre><code>ssh -T git@github.com</code></pre><p>选择 yes，如果看到Hi后面是你的用户名，就说明成功了。</p><pre><code>Hi AzBomb/AzBomb.github.io! You&#39;ve successfully authenticated, but GitHub does not provide shell access.Connection to github.com closed.</code></pre><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo 基于 Node.js，因此需要先安装 Node.js，可以在这里进行对应电脑版本的下载：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p>如果是 Linux 也可以通过命令行进行安装，命令行参考 Node 或 Hexo 官方文档。</p><!-- 下面的 curl 或 wget 用其中一种即可, vxx.xx.xx 是对应版本号。        $ curl https://raw.github.com/creationix/nvm/vxx.xx.xx/install.sh | sh2        $ wget -qO- https://raw.github.com/creationix/nvm/vxx.xx.xx/install.sh | sh2     安装完成后，重启终端并执行下列命令即可安装 Node.js。        $ nvm install stable--><p>Windows 终端下载好客户端直接按步骤安装，安装好之后，Hexo 框架所需要的建站环境就建好了，后面只要输入一些命令就可以建一个属于自己的网站了。如果有小伙伴想再深入些研究，可以网上搜一些更多关于这方面的内容，或者到 <a href="https://hexo.io/zh-cn/">Hexo 的官方网站</a><a href="https://hexo.io/zh-cn/docs/">帮助文档</a>查阅相关内容。</p><p>安装完之后，我们打开命令窗口，查看软件版本。</p><pre><code>node -vv16.17.1npm -v8.15.0</code></pre><h3 id="网站搭建"><a href="#网站搭建" class="headerlink" title="网站搭建"></a>网站搭建</h3><p>进入自己确定的文件路径，使用 npm 一键安装 Hexo 博客程序。</p><pre><code>$ npm install -g hexo-cli</code></pre><p>初始化自己确定好文件路径下的博客目录。</p><pre><code>hexo init username.github.io  # username 替换成自己的英文名</code></pre><p>初始化完成后，进入刚刚建好的目录。</p><pre><code>cd username.github.io         # username 替换成自己的英文名</code></pre><p>初始化并安装Hexo所需组件。</p><pre><code>hexo init                     # 初始化npm install                   # 安装组件</code></pre><p>清除一下静态页面，然后生成新的静态页面。</p><pre><code>hexo clean hexo g                        # g 就是 generate，生成的意思</code></pre><p>生成新的静态页面后，启动本地服务器进行预览。</p><pre><code>hexo s                        # s 就是 server，在服务器运行的意思</code></pre><p>浏览器输入 <a href="http://localhost:4000，出现">http://localhost:4000，出现</a> Hexo 默认页面，本地博客安装成功！</p><p><img src="/../img/0002/hello_world.jpg"></p><blockquote><p>图片来自 Hexo 运行后的截图</p></blockquote><p>Tips：如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，更改端口号后重试。</p><pre><code>hexo server -p 5000 </code></pre><p>浏览器输入 <a href="http://localhost:5000，出现">http://localhost:5000，出现</a> Hexo 默认页面就出现了。</p><p>Hexo 博客文件夹目录结构如下：</p><p><img src="/../img/0002/hexo_dir_tree.jpg"></p><blockquote><p>图片来自 Hexo 帮助文档截图</p></blockquote><p>部署 Hexo 到 GitHub Pages</p><p>本地博客测试成功后，就可以上传到 GitHub 进行部署，使其能够在网络上访问。<br>首先安装 hexo-deployer-git</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>然后修改 _config.yml 文件末的 Deployment ：</p><pre><code>deploy:type: gitrepo: https://github.com/username/username.github.io.git    # username 替换成自己的英文名branch: master</code></pre><p>完成后运行 deploy 将网站上传部署到 GitHub Pages。</p><pre><code>hexo d</code></pre><p>完成！如果遇到网络连接问题，可以多试几次hexo d，这时访问我们的 GitHub 域名 https:&#x2F;&#x2F;“username”.github.io 就可以看到 Hexo 网站了。</p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>博客搭建完成使用的是 GitHub 子域名（用户名.<a href="http://github.io),我们可以为/">http://github.io），我们可以为</a> Hexo 博客绑定自己的域名替换 GitHub 域名。这个功能本人暂时还未能实现，有需求朋友可以网上看看其他小伙伴的经验分享，日后我这实现了，也出篇文章分享给大家。</p><h3 id="Hexo-主题"><a href="#Hexo-主题" class="headerlink" title="Hexo 主题"></a>Hexo 主题</h3><p>刚刚打开的网站是不是有点单调，多样化的主题设计应运而生。Hexo 官方发布了很多开发者有趣的<a href="https://hexo.io/themes/">开源主题</a>，每个人都可以根据需求选择一款自己中意的，当然你也可以自己设计开发，遵循主题相关的开源协议即可。总之主题的世界给了我们很多创意空间，让我们一起来加入吧。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>Hexo 是一种纯静态网页博客，必须要在本地完成文章的编辑，然后再部署到 GitHub。依赖本地环境，不能像 WordPress 或 Typecho 那样的动态博客一样，能在浏览器中完成撰文和发布。</p><p>Hexo 可以说是一种比较极客的写博客方式，但是免费稳定省心，比较适合小范围圈子用户，或者没有在线发文需求的朋友。</p><!-- ## 下篇Hexo 博客网站搭建就分享到这，刚搭建完的网站，是不是觉得有点丑，不符合您的胃口？Hexo 个性主题就应运而生，下篇就来说说怎么使用 Hexo 主题。 -->]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github, Hexo，网站，搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开天辟地第一篇</title>
      <link href="/2022/10/06/0001_%E5%BC%80%E5%A4%A9%E8%BE%9F%E5%9C%B0%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
      <url>/2022/10/06/0001_%E5%BC%80%E5%A4%A9%E8%BE%9F%E5%9C%B0%E7%AC%AC%E4%B8%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://github.com/AzBomb/AzBomb.github.io">AzBomb</a>的博客!</p><h2 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h2><h3 id="为什么建站"><a href="#为什么建站" class="headerlink" title="为什么建站"></a>为什么建站</h3><p>本人一名80后自动化小蚁，在自动化行业已十年有余，一直想写点行业相关的笔记与心得，分享给大家，由于种种原因，很长时间都没能实现。近期机缘巧合从 IT 朋友处了解到可以在 Github 上实现个人博客网站，还有资金投入几乎为零，只不过要学习怎么搭建网站。</p><p>好，从网上找资料，干就完了！</p><h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><p>由于能力有限，用自控人的思想，开局能跑就 OK，等日后有了新技能和丰富经验之后再完善。网站建设离不开大家的支持，在此感谢大神们的帮助和分享，有了你们无私奉献，才有了我这个小小博客。 </p><p>今天就写到这，感谢大家的支持！</p><!-- ### [下篇]下篇主要讲讲我博客的搭建过程，因为基于 Github 和 Hexo,篇名就叫[《怎样用 Github 和 Hexo 搭建个人网站》](../../07/0002_怎样用github和hexo搭建个人网站/index.html)。 --><p>ヾ(￣▽￣) Bye</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> About </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化,开篇 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
